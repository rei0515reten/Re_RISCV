$date
	Sun Nov 17 02:19:23 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module sim_test $end
$var wire 32 ! WriteData [31:0] $end
$var wire 1 " MemWrite $end
$var wire 32 # DataAdr [31:0] $end
$var reg 1 $ Clk $end
$var reg 1 % reset $end
$scope module _top $end
$var wire 1 $ Clk $end
$var wire 1 % reset $end
$var wire 32 & WriteData [31:0] $end
$var wire 32 ' ReadData [31:0] $end
$var wire 32 ( PC [31:0] $end
$var wire 1 " MemWrite $end
$var wire 32 ) Instr [31:0] $end
$var wire 32 * DataAdr [31:0] $end
$scope module dmem $end
$var wire 1 $ Clk $end
$var wire 32 + rd [31:0] $end
$var wire 1 " we $end
$var wire 32 , wd [31:0] $end
$var wire 32 - a [31:0] $end
$upscope $end
$scope module imem $end
$var wire 32 . rd [31:0] $end
$var wire 32 / a [31:0] $end
$upscope $end
$scope module rvpipe $end
$var wire 1 $ Clk $end
$var wire 32 0 Instr [31:0] $end
$var wire 32 1 ReadData [31:0] $end
$var wire 1 % reset $end
$var wire 1 2 Zero $end
$var wire 32 3 WriteData [31:0] $end
$var wire 2 4 ResultSrc [1:0] $end
$var wire 1 5 RegWrite $end
$var wire 1 6 PCSrc $end
$var wire 32 7 PC [31:0] $end
$var wire 1 " MemWrite $end
$var wire 1 8 Jump $end
$var wire 2 9 ImmSrc [1:0] $end
$var wire 1 : ALUSrc $end
$var wire 32 ; ALUResult [31:0] $end
$var wire 3 < ALUControl [2:0] $end
$scope module c $end
$var wire 1 6 PCSrc $end
$var wire 3 = funct3 [2:0] $end
$var wire 1 > funct7b5 $end
$var wire 7 ? op [6:0] $end
$var wire 1 2 Zero $end
$var wire 2 @ ResultSrc [1:0] $end
$var wire 1 5 RegWrite $end
$var wire 1 " MemWrite $end
$var wire 1 8 Jump $end
$var wire 2 A ImmSrc [1:0] $end
$var wire 1 B Branch $end
$var wire 1 : ALUSrc $end
$var wire 2 C ALUOp [1:0] $end
$var wire 3 D ALUControl [2:0] $end
$scope module ad $end
$var wire 1 E RtypeSub $end
$var wire 3 F funct3 [2:0] $end
$var wire 1 > funct7b5 $end
$var wire 1 G opb5 $end
$var wire 2 H ALUOp [1:0] $end
$var reg 3 I ALUControl [2:0] $end
$upscope $end
$scope module md $end
$var wire 7 J op [6:0] $end
$var wire 2 K ResultSrc [1:0] $end
$var wire 1 5 RegWrite $end
$var wire 1 " MemWrite $end
$var wire 1 8 Jump $end
$var wire 2 L ImmSrc [1:0] $end
$var wire 1 B Branch $end
$var wire 1 : ALUSrc $end
$var wire 2 M ALUOp [1:0] $end
$var reg 11 N controls [10:0] $end
$upscope $end
$upscope $end
$scope module dp $end
$var wire 3 O ALUControl [2:0] $end
$var wire 1 : ALUSrc $end
$var wire 2 P ImmSrc [1:0] $end
$var wire 32 Q Instr [31:0] $end
$var wire 1 6 PCSrc $end
$var wire 32 R ReadData [31:0] $end
$var wire 1 5 RegWrite $end
$var wire 2 S ResultSrc [1:0] $end
$var wire 1 $ clk $end
$var wire 1 % reset $end
$var wire 32 T WriteData [31:0] $end
$var wire 32 U SrcB [31:0] $end
$var wire 32 V SrcA [31:0] $end
$var wire 32 W Result [31:0] $end
$var wire 32 X PCTarget [31:0] $end
$var wire 32 Y PCPlus4 [31:0] $end
$var wire 32 Z PCNext [31:0] $end
$var wire 32 [ PC [31:0] $end
$var wire 32 \ ImmExt [31:0] $end
$var wire 32 ] ALUResult [31:0] $end
$var reg 1 2 Zero $end
$scope module alu $end
$var wire 3 ^ ALUControl [2:0] $end
$var wire 1 2 Zero $end
$var wire 32 _ SrcB [31:0] $end
$var wire 32 ` SrcA [31:0] $end
$var reg 32 a ALUResult [31:0] $end
$upscope $end
$scope module ext $end
$var wire 2 b immsrc [1:0] $end
$var wire 32 c instr [31:0] $end
$var wire 1 d instr7 $end
$var wire 7 e instr31_25 [6:0] $end
$var wire 12 f instr31_20 [11:0] $end
$var wire 1 g instr31 $end
$var wire 6 h instr30_25 [5:0] $end
$var wire 10 i instr30_21 [9:0] $end
$var wire 1 j instr20 $end
$var wire 8 k instr19_12 [7:0] $end
$var wire 4 l instr11_8 [3:0] $end
$var wire 5 m instr11_7 [4:0] $end
$var reg 32 n immext [31:0] $end
$upscope $end
$scope module pcadd4 $end
$var wire 32 o b [31:0] $end
$var wire 32 p out [31:0] $end
$var wire 32 q a [31:0] $end
$upscope $end
$scope module pcaddbranch $end
$var wire 32 r b [31:0] $end
$var wire 32 s out [31:0] $end
$var wire 32 t a [31:0] $end
$upscope $end
$scope module pcmux $end
$var wire 32 u d0 [31:0] $end
$var wire 32 v d1 [31:0] $end
$var wire 1 6 s $end
$var wire 32 w out [31:0] $end
$var parameter 32 x WIDTH $end
$upscope $end
$scope module pcreg $end
$var wire 1 $ clk $end
$var wire 32 y d [31:0] $end
$var wire 1 % reset $end
$var parameter 32 z WIDTH $end
$var reg 32 { q [31:0] $end
$upscope $end
$scope module resultmux $end
$var wire 32 | d0 [31:0] $end
$var wire 32 } d1 [31:0] $end
$var wire 32 ~ d2 [31:0] $end
$var wire 2 !" s [1:0] $end
$var wire 32 "" out [31:0] $end
$var parameter 32 #" WIDTH $end
$upscope $end
$scope module rf $end
$var wire 1 $ clk $end
$var wire 5 $" read_reg1 [4:0] $end
$var wire 5 %" read_reg2 [4:0] $end
$var wire 32 &" write_data [31:0] $end
$var wire 1 5 write_enable $end
$var wire 5 '" write_reg [4:0] $end
$var wire 32 (" read_data2 [31:0] $end
$var wire 32 )" read_data1 [31:0] $end
$upscope $end
$scope module srcbmux $end
$var wire 32 *" d0 [31:0] $end
$var wire 32 +" d1 [31:0] $end
$var wire 1 : s $end
$var wire 32 ," out [31:0] $end
$var parameter 32 -" WIDTH $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b100000 -"
b100000 #"
b100000 z
b100000 x
$end
#0
$dumpvars
b101 ,"
b101 +"
bx *"
b0 )"
bx ("
b10 '"
bx &"
b101 %"
b0 $"
bx ""
b0 !"
b100 ~
bx }
bx |
b0 {
b100 y
b100 w
b101 v
b100 u
b0 t
b101 s
b101 r
b0 q
b100 p
b100 o
b101 n
b10 m
b1 l
b0 k
1j
b10 i
b0 h
0g
b101 f
b0 e
0d
b10100000000000100010011 c
b0 b
bx a
bx `
b101 _
b0 ^
bx ]
b101 \
b0 [
b100 Z
b100 Y
b101 X
b0 W
bx V
b101 U
bx T
b0 S
bx R
b10100000000000100010011 Q
b0 P
b0 O
b10010000100 N
b10 M
b0 L
b0 K
b10011 J
b0 I
b10 H
0G
b0 F
0E
b0 D
b10 C
0B
b0 A
b0 @
b10011 ?
0>
b0 =
b0 <
bx ;
1:
b0 9
08
b0 7
06
15
b0 4
bx 3
x2
bx 1
b10100000000000100010011 0
b0 /
b10100000000000100010011 .
bx -
bx ,
bx +
bx *
b10100000000000100010011 )
b0 (
bx '
bx &
1%
0$
bx #
0"
bx !
$end
#1000
1$
#2000
0$
#3000
1$
#4000
0$
#5000
1$
#6000
0$
#7000
1$
#8000
0$
#9000
1$
#10000
0$
#11000
1$
#12000
0$
#13000
1$
#14000
0$
#15000
1$
#16000
0$
#17000
1$
#18000
0$
#19000
1$
#20000
0$
0%
#21000
b1100 U
b1100 _
b1100 ,"
b1100 \
b1100 n
b1100 r
b1100 +"
b1100 %"
b11 '"
b1100 f
1d
0j
b11 m
b110 i
b1000 Z
b1000 w
b1000 y
b110000000000000110010011 )
b110000000000000110010011 .
b110000000000000110010011 0
b110000000000000110010011 Q
b110000000000000110010011 c
b10000 X
b10000 s
b10000 v
b1000 Y
b1000 p
b1000 u
b1000 ~
b100 (
b100 /
b100 7
b100 [
b100 q
b100 t
b100 {
1$
#22000
0$
#23000
b11111111111111111111111111110111 U
b11111111111111111111111111110111 _
b11111111111111111111111111110111 ,"
bx W
bx )"
b11111111111111111111111111110111 \
b11111111111111111111111111110111 n
b11111111111111111111111111110111 r
b11111111111111111111111111110111 +"
1>
b11 $"
b10111 %"
b111 '"
b111111110111 f
1g
1j
b1111111 e
b111 m
b111111 h
b11 l
b11000 k
b1111111011 i
b1100 Z
b1100 w
b1100 y
b11111111011100011000001110010011 )
b11111111011100011000001110010011 .
b11111111011100011000001110010011 0
b11111111011100011000001110010011 Q
b11111111011100011000001110010011 c
b11111111111111111111111111111111 X
b11111111111111111111111111111111 s
b11111111111111111111111111111111 v
b1100 Y
b1100 p
b1100 u
b1100 ~
b1000 (
b1000 /
b1000 7
b1000 [
b1000 q
b1000 t
b1000 {
1$
#24000
0$
#25000
bx 9
bx A
bx L
bx P
bx b
0:
bx U
bx _
bx ,"
1G
b1xx00000100 N
b11 <
b11 D
b11 I
b11 O
b11 ^
bx \
bx n
bx r
bx +"
b110011 ?
b110011 J
b110 =
b110 F
0>
b111 $"
b10 %"
b100 '"
b10 f
0g
0d
0j
b0 e
b100 m
b0 h
b10 l
b111110 k
b1 i
b10000 Z
b10000 w
b10000 y
b1000111110001000110011 )
b1000111110001000110011 .
b1000111110001000110011 0
b1000111110001000110011 Q
b1000111110001000110011 c
bx X
bx s
bx v
b10000 Y
b10000 p
b10000 u
b10000 ~
b1100 (
b1100 /
b1100 7
b1100 [
b1100 q
b1100 t
b1100 {
1$
#26000
0$
#27000
b10 <
b10 D
b10 I
b10 O
b10 ^
b111 =
b111 F
b11 $"
b100 %"
b101 '"
b100 f
1d
b101 m
b11111 k
b10 i
b10100 Z
b10100 w
b10100 y
b10000011111001010110011 )
b10000011111001010110011 .
b10000011111001010110011 0
b10000011111001010110011 Q
b10000011111001010110011 c
b10100 Y
b10100 p
b10100 u
b10100 ~
b10000 (
b10000 /
b10000 7
b10000 [
b10000 q
b10000 t
b10000 {
1$
#28000
0$
#29000
b0 <
b0 D
b0 I
b0 O
b0 ^
b0 =
b0 F
b101 $"
b101000 k
b11000 Z
b11000 w
b11000 y
b10000101000001010110011 )
b10000101000001010110011 .
b10000101000001010110011 0
b10000101000001010110011 Q
b10000101000001010110011 c
b11000 Y
b11000 p
b11000 u
b11000 ~
b10100 (
b10100 /
b10100 7
b10100 [
b10100 q
b10100 t
b10100 {
1$
#30000
0$
#31000
x6
b1001000 X
b1001000 s
b1001000 v
b110000 \
b110000 n
b110000 r
b110000 +"
b1 <
b1 D
b1 I
b1 O
b1 ^
05
b10 9
b10 A
b10 L
b10 P
b10 b
1B
b1 C
b1 H
b1 M
b1000001010 N
b1100011 ?
b1100011 J
b111 %"
b10000 '"
b100111 f
0d
1j
b1 e
b10000 m
b1 h
b1000 l
b10011 i
b0x0x1x00 Z
b0x0x1x00 w
b0x0x1x00 y
b10011100101000100001100011 )
b10011100101000100001100011 .
b10011100101000100001100011 0
b10011100101000100001100011 Q
b10011100101000100001100011 c
b11100 Y
b11100 p
b11100 u
b11100 ~
b11000 (
b11000 /
b11000 7
b11000 [
b11000 q
b11000 t
b11000 {
1$
#32000
0$
#33000
bx <
bx D
bx I
bx O
bx ^
x5
bx 9
bx A
bx L
bx P
bx b
x:
x"
bx 4
bx @
bx K
bx S
bx !"
xB
bx C
bx H
bx M
x8
xG
bx N
xE
bx \
bx n
bx r
bx +"
bx ?
bx J
bx =
bx F
x>
bx $"
bx %"
bx '"
bx f
xg
xd
xj
bx e
bx m
bx h
bx l
bx k
bx i
bx Z
bx w
bx y
bx )
bx .
bx 0
bx Q
bx c
bx X
bx s
bx v
bx Y
bx p
bx u
bx ~
b0x0x1x00 (
b0x0x1x00 /
b0x0x1x00 7
b0x0x1x00 [
b0x0x1x00 q
b0x0x1x00 t
b0x0x1x00 {
1$
#34000
0$
#35000
bx (
bx /
bx 7
bx [
bx q
bx t
bx {
1$
#36000
0$
#37000
1$
#38000
0$
#39000
1$
#40000
0$
#41000
1$
#42000
0$
#43000
1$
#44000
0$
#45000
1$
#46000
0$
#47000
1$
#48000
0$
#49000
1$
#50000
0$
#51000
1$
#52000
0$
#53000
1$
#54000
0$
#55000
1$
#56000
0$
#57000
1$
#58000
0$
#59000
1$
#60000
0$
#61000
1$
#62000
0$
#63000
1$
#64000
0$
#65000
1$
#66000
0$
#67000
1$
#68000
0$
#69000
1$
#70000
0$
#71000
1$
#72000
0$
#73000
1$
#74000
0$
#75000
1$
#76000
0$
#77000
1$
#78000
0$
#79000
1$
#80000
0$
#81000
1$
#82000
0$
#83000
1$
#84000
0$
#85000
1$
#86000
0$
#87000
1$
#88000
0$
#89000
1$
#90000
0$
#91000
1$
#92000
0$
#93000
1$
#94000
0$
#95000
1$
#96000
0$
#97000
1$
#98000
0$
#99000
1$
#100000
0$
#101000
1$
#102000
0$
#103000
1$
#104000
0$
#105000
1$
#106000
0$
#107000
1$
#108000
0$
#109000
1$
#110000
0$
#111000
1$
#112000
0$
#113000
1$
#114000
0$
#115000
1$
#116000
0$
#117000
1$
#118000
0$
#119000
1$
#120000
0$
#121000
1$
#122000
0$
#123000
1$
#124000
0$
#125000
1$
#126000
0$
#127000
1$
#128000
0$
#129000
1$
#130000
0$
#131000
1$
#132000
0$
#133000
1$
#134000
0$
#135000
1$
#136000
0$
#137000
1$
#138000
0$
#139000
1$
#140000
0$
#141000
1$
#142000
0$
#143000
1$
#144000
0$
#145000
1$
#146000
0$
#147000
1$
#148000
0$
#149000
1$
#150000
0$
#151000
1$
#152000
0$
#153000
1$
#154000
0$
#155000
1$
#156000
0$
#157000
1$
#158000
0$
#159000
1$
#160000
0$
#161000
1$
#162000
0$
#163000
1$
#164000
0$
#165000
1$
#166000
0$
#167000
1$
#168000
0$
#169000
1$
#170000
0$
#171000
1$
#172000
0$
#173000
1$
#174000
0$
#175000
1$
#176000
0$
#177000
1$
#178000
0$
#179000
1$
#180000
0$
#181000
1$
#182000
0$
#183000
1$
#184000
0$
#185000
1$
#186000
0$
#187000
1$
#188000
0$
#189000
1$
#190000
0$
#191000
1$
#192000
0$
#193000
1$
#194000
0$
#195000
1$
#196000
0$
#197000
1$
#198000
0$
#199000
1$
#200000
0$
#201000
1$
#202000
0$
#203000
1$
#204000
0$
#205000
1$
#206000
0$
#207000
1$
#208000
0$
#209000
1$
#210000
0$
#211000
1$
#212000
0$
#213000
1$
#214000
0$
#215000
1$
#216000
0$
#217000
1$
#218000
0$
#219000
1$
#220000
0$
#221000
1$
#222000
0$
#223000
1$
#224000
0$
#225000
1$
#226000
0$
#227000
1$
#228000
0$
#229000
1$
#230000
0$
#231000
1$
#232000
0$
#233000
1$
#234000
0$
#235000
1$
#236000
0$
#237000
1$
#238000
0$
#239000
1$
#240000
0$
#241000
1$
#242000
0$
#243000
1$
#244000
0$
#245000
1$
#246000
0$
#247000
1$
#248000
0$
#249000
1$
#250000
0$
#251000
1$
#252000
0$
#253000
1$
#254000
0$
#255000
1$
#256000
0$
#257000
1$
#258000
0$
#259000
1$
#260000
0$
#261000
1$
#262000
0$
#263000
1$
#264000
0$
#265000
1$
#266000
0$
#267000
1$
#268000
0$
#269000
1$
#270000
0$
#271000
1$
#272000
0$
#273000
1$
#274000
0$
#275000
1$
#276000
0$
#277000
1$
#278000
0$
#279000
1$
#280000
0$
#281000
1$
#282000
0$
#283000
1$
#284000
0$
#285000
1$
#286000
0$
#287000
1$
#288000
0$
#289000
1$
#290000
0$
#291000
1$
#292000
0$
#293000
1$
#294000
0$
#295000
1$
#296000
0$
#297000
1$
#298000
0$
#299000
1$
#300000
0$
#301000
1$
#302000
0$
#303000
1$
#304000
0$
#305000
1$
#306000
0$
#307000
1$
#308000
0$
#309000
1$
#310000
0$
#311000
1$
#312000
0$
#313000
1$
#314000
0$
#315000
1$
#316000
0$
#317000
1$
#318000
0$
#319000
1$
#320000
0$
#321000
1$
#322000
0$
#323000
1$
#324000
0$
#325000
1$
#326000
0$
#327000
1$
#328000
0$
#329000
1$
#330000
0$
#331000
1$
#332000
0$
#333000
1$
#334000
0$
#335000
1$
#336000
0$
#337000
1$
#338000
0$
#339000
1$
#340000
0$
#341000
1$
#342000
0$
#343000
1$
#344000
0$
#345000
1$
#346000
0$
#347000
1$
#348000
0$
#349000
1$
#350000
0$
#351000
1$
#352000
0$
#353000
1$
#354000
0$
#355000
1$
#356000
0$
#357000
1$
#358000
0$
#359000
1$
#360000
0$
#361000
1$
#362000
0$
#363000
1$
#364000
0$
#365000
1$
#366000
0$
#367000
1$
#368000
0$
#369000
1$
#370000
0$
#371000
1$
#372000
0$
#373000
1$
#374000
0$
#375000
1$
#376000
0$
#377000
1$
#378000
0$
#379000
1$
#380000
0$
#381000
1$
#382000
0$
#383000
1$
#384000
0$
#385000
1$
#386000
0$
#387000
1$
#388000
0$
#389000
1$
#390000
0$
#391000
1$
#392000
0$
#393000
1$
#394000
0$
#395000
1$
#396000
0$
#397000
1$
#398000
0$
#399000
1$
#400000
0$
#401000
1$
#402000
0$
#403000
1$
#404000
0$
#405000
1$
#406000
0$
#407000
1$
#408000
0$
#409000
1$
#410000
0$
#411000
1$
#412000
0$
#413000
1$
#414000
0$
#415000
1$
#416000
0$
#417000
1$
#418000
0$
#419000
1$
#420000
0$
#421000
1$
#422000
0$
#423000
1$
#424000
0$
#425000
1$
#426000
0$
#427000
1$
#428000
0$
#429000
1$
#430000
0$
#431000
1$
#432000
0$
#433000
1$
#434000
0$
#435000
1$
#436000
0$
#437000
1$
#438000
0$
#439000
1$
#440000
0$
#441000
1$
#442000
0$
#443000
1$
#444000
0$
#445000
1$
#446000
0$
#447000
1$
#448000
0$
#449000
1$
#450000
0$
#451000
1$
#452000
0$
#453000
1$
#454000
0$
#455000
1$
#456000
0$
#457000
1$
#458000
0$
#459000
1$
#460000
0$
#461000
1$
#462000
0$
#463000
1$
#464000
0$
#465000
1$
#466000
0$
#467000
1$
#468000
0$
#469000
1$
#470000
0$
#471000
1$
#472000
0$
#473000
1$
#474000
0$
#475000
1$
#476000
0$
#477000
1$
#478000
0$
#479000
1$
#480000
0$
#481000
1$
#482000
0$
#483000
1$
#484000
0$
#485000
1$
#486000
0$
#487000
1$
#488000
0$
#489000
1$
#490000
0$
#491000
1$
#492000
0$
#493000
1$
#494000
0$
#495000
1$
#496000
0$
#497000
1$
#498000
0$
#499000
1$
#500000
0$
#501000
1$
#502000
0$
#503000
1$
#504000
0$
#505000
1$
#506000
0$
#507000
1$
#508000
0$
#509000
1$
#510000
0$
#511000
1$
#512000
0$
#513000
1$
#514000
0$
#515000
1$
#516000
0$
#517000
1$
#518000
0$
#519000
1$
#520000
0$
